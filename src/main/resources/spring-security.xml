<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

	<http auto-config="true" use-expressions="true" >
		<intercept-url pattern="/devLog" access="hasRole('GOD')" />
		<intercept-url pattern="/AccountBase/**" access="hasRole('Acc_AB')" />
		<intercept-url pattern="/Admin/**" access="hasRole('Acc_AD')" />
		<access-denied-handler error-page="/accesssDenied" />
		<form-login login-page="/login" 
		    default-target-url="/index"
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password"
			login-processing-url="/login_check"
			authentication-success-handler-ref="savedRequestAwareAuthenticationSuccessHandler"
			 />
		<logout logout-success-url="/logout" delete-cookies="JSESSIONID"/>
		<!-- enable csrf protection -->
		<csrf />
		<remember-me 
        token-validity-seconds="1209600"
		remember-me-parameter="remember-me" 
		data-source-ref="dataSource" />
	</http>


	<beans:bean id="userAttemptsDao"
		class="service.impl.UserAttemptsServiceImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="customUserDetailsService"
		class="security.CustomUserDetailsService">
		<beans:property name="usersByUsernameQuery"
			value="SELECT username username,password password, enabled enabled,accountnonexpired accountnonexpired,accountnonlocked accountnonlocked,credentialsnonexpired credentialsnonexpired FROM t_users WHERE username=?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="SELECT username username, role role FROM t_user_roles WHERE username=?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>



	<beans:bean id="authenticationProvider" class="security.LimitLoginAuthenticationProvider">
		<beans:property name="passwordEncoder" ref="encoder" />
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<beans:property name="userAttemptsDao" ref="userAttemptsDao" />
	</beans:bean>

	<authentication-manager>
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="9" />
	</beans:bean>





</beans:beans>

